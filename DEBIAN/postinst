#! /bin/sh
# $Id$
# postinst script for smbedu
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/doc/packaging-manual/
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.
case "$1" in
    configure)
	echo "Installation de BackupPc en cours......"
        # Stop BackupPc
        /etc/init.d/backuppc stop 2>/dev/null
	# degage conf paquet backuppc
        # voir si on installe sur une ancienne version, deplacer les fichiers existants ???
        #
        /usr/share/se3/sbin/permse3

        WWWPATH="/var/www"
	## recuperation des variables necessaires pour interoger mysql ###
	if [ -e $WWWPATH/se3/includes/config.inc.php ]; then
		dbhost=`cat $WWWPATH/se3/includes/config.inc.php | grep "dbhost=" | cut -d = -f2 | cut -d \" -f2`
		dbname=`cat $WWWPATH/se3/includes/config.inc.php | grep "dbname=" | cut	-d = -f 2 |cut -d \" -f 2`
		dbuser=`cat $WWWPATH/se3/includes/config.inc.php | grep "dbuser=" | cut -d = -f 2 | cut -d \" -f 2`
		dbpass=`cat $WWWPATH/se3/includes/config.inc.php | grep "dbpass=" | cut -d = -f 2 | cut -d \" -f 2`
	else
		echo "Fichier de configuration inaccessible, le script ne peut se poursuivre."
		exit 1
	fi

	test_exist=`echo "SELECT value FROM params WHERE name='backuppc'" | mysql -h $dbhost $dbname -u $dbuser -p$dbpass -N`
	if [ "$test_exist" != "1" ]; then # vide donc on a une primo install
		echo "INSERT INTO params VALUES ('', 'backuppc', '0', 0, 'Active backuppc de l'interface', 5)" | mysql -h $dbhost $dbname -u $dbuser -p$dbpass -N
		echo "INSERT INTO params VALUES ('', 'bpcmedia', '0', 0, 'Media de sauvegarde pour backuppc', 5)" | mysql -h $dbhost $dbname -u $dbuser -p$dbpass -N
		echo "INSERT INTO params VALUES ('', 'bck_user', 'backuppc', 0, 'Utilisateur proprietaire backuppc', 5)" | mysql -h $dbhost $dbname -u $dbuser -p$dbpass -N
                echo "INSERT INTO params VALUES ('', 'bck_uidnumber', '0', 0, 'uidnumber proprietaire backuppc', 5)" | mysql -h $dbhost $dbname -u $dbuser -p$dbpass -N

                rm -f /etc/backuppc/localhost.pl
                rm -f /etc/backuppc/config.pl
         fi # Si pas vide donc backuppc est deja actif, on touche pas au repertoire /etc/backuppc


        # voir si on doit redescendre les droits car si backuppc est deja actif cela peut etre tres long
        # /usr/share/se3/sbin/droit_backuppc.sh

        # Cree le lien symbolique pour Lib.pm en fonction de l'OS
        ln -s /usr/share/backuppc/lib/BackupPC/CGI/Lib.pm.lenny /usr/share/backuppc/lib/BackupPC/CGI/Lib.pm
        # Ajout dans sudoers

	)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

exit 0
